@model BookStore.Models.ViewModels.EditUserProfileViewModel

@{
    ViewBag.Title = "Edit Profile";
}
<div class="row">
    <input type="button" onclick="window.history.back()" value="&laquo; Back" class="btn btn-default">
</div>

<div class="row">
    <p class="pull-right">
        @Html.ActionLink("Change Password", "ChangePassword", "Manage", null, new { @class = "btn btn-default"})
    </p>
    <h2 class="text-center">@ViewBag.Title</h2>
</div>
<hr />
<div class="row">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal col-md-8 col-md-offset-2">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(user => user.Id)

            <div class="form-group">
                @Html.LabelFor(user => user.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(user => user.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(user => user.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(user => user.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(user => user.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(user => user.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(user => user.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(user => user.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(user => user.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(user => user.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(user => user.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(user => user.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(user => user.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(user => user.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(user => user.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(user => user.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(user => user.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(user => user.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

